{"ast":null,"code":"var _jsxFileName = \"/home/nadelacruz/Desktop/WebDev/fccfrontendexercises/fccquotegenerator/src/components/QuoteGenerator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Text, Box } from '@chakra-ui/react';\nimport randomcolor from 'randomcolor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteGenerator = () => {\n  _s();\n\n  const color = randomcolor();\n  const [quotes, setQuotes] = useState([{\n    quote: `Time is gold when I'm watching bold.`,\n    author: `Brevin Manalo`\n  }, {\n    quote: `The greatest glory in living lies not in never falling, but in rising every time we fall.\n        `,\n    author: `Nelson Mandela`\n  }, {\n    quote: `Your time is limited, so don't waste it living someone else's life. Don't be trapped by dogma – which is living with the results of other people's thinking.\n        `,\n    author: `Steve Jobs`\n  }, {\n    quote: `If life were predictable it would cease to be life, and be without flavor.`,\n    author: `Eleanor Roosevelt`\n  }, {\n    quote: `If you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough.\n        `,\n    author: `Oprah Winfrey`\n  }, {\n    quote: `If you set your goals ridiculously high and it's a failure, you will fail above everyone else's success.\n        `,\n    author: `James Cameron`\n  }, {\n    quote: `Life is what happens when you're busy making other plans.`,\n    author: `John Lennon`\n  }]);\n  const generateQuoteIndex = Math.floor(Math.random() * quotes.length);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    backgroundColor: color,\n    minH: \"100vh\",\n    padding: \"150px 400px 10px\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      backgroundColor: \"white\",\n      minH: \"300px\",\n      padding: \"50px\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          flexDirection: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"3xl\",\n            color: color,\n            children: quotes[generateQuoteIndex].quote\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            alignSelf: \"flex-end\",\n            fontSize: \"md\",\n            padding: \"20px\",\n            color: color,\n            children: [\"-\", quotes[generateQuoteIndex].author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              margin: \"0px 5px\",\n              backgroundColor: color,\n              color: \"white\",\n              children: \"Twt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              backgroundColor: color,\n              color: \"white\",\n              children: \"Tum\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            backgroundColor: color,\n            color: \"white\",\n            onClick: () => setQuotes([...quotes]),\n            children: \"Generate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteGenerator, \"rFpBgXByGKvr+zCcnYe5hZXHiNc=\");\n\n_c = QuoteGenerator;\nexport default QuoteGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteGenerator\");","map":{"version":3,"sources":["/home/nadelacruz/Desktop/WebDev/fccfrontendexercises/fccquotegenerator/src/components/QuoteGenerator.js"],"names":["React","useState","useEffect","Button","Text","Box","randomcolor","QuoteGenerator","color","quotes","setQuotes","quote","author","generateQuoteIndex","Math","floor","random","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Text, Box } from '@chakra-ui/react';\nimport randomcolor from 'randomcolor';\n\nconst QuoteGenerator = () => {\n    const color = randomcolor();\n    const [quotes, setQuotes] = useState([\n        {quote: `Time is gold when I'm watching bold.`, author: `Brevin Manalo`},\n        {quote: `The greatest glory in living lies not in never falling, but in rising every time we fall.\n        `, author: `Nelson Mandela`},\n        {quote: `Your time is limited, so don't waste it living someone else's life. Don't be trapped by dogma – which is living with the results of other people's thinking.\n        `, author: `Steve Jobs`},\n        {quote: `If life were predictable it would cease to be life, and be without flavor.`, author: `Eleanor Roosevelt`},\n        {quote: `If you look at what you have in life, you'll always have more. If you look at what you don't have in life, you'll never have enough.\n        `, author: `Oprah Winfrey`},\n        {quote: `If you set your goals ridiculously high and it's a failure, you will fail above everyone else's success.\n        `, author: `James Cameron`},\n        {quote: `Life is what happens when you're busy making other plans.`, author: `John Lennon`},\n    ]);\n    const generateQuoteIndex = Math.floor(Math.random() * quotes.length);\n    return (\n        <Box backgroundColor={color}\n        minH=\"100vh\"\n        padding=\"150px 400px 10px\"\n        >\n            <Box \n            backgroundColor=\"white\"\n            minH=\"300px\"\n            padding=\"50px\"\n            >\n                <Box display=\"flex\"\n                flexDirection=\"column\"\n                >\n                    <Box \n                    display=\"flex\"\n                    flexDirection=\"column\">\n                        <Text fontSize=\"3xl\" color={color}>{quotes[generateQuoteIndex].quote}</Text>\n                        <Text alignSelf=\"flex-end\" fontSize=\"md\" padding=\"20px\" color={color}>-{quotes[generateQuoteIndex].author}</Text>\n                    </Box>\n                    <Box display=\"flex\"\n                    justifyContent=\"space-between\"\n                    >\n                        <Box>\n                            <Button margin=\"0px 5px\" backgroundColor={color} color=\"white\">Twt</Button>\n                            <Button backgroundColor={color} color=\"white\">Tum</Button>\n                        </Box>\n                        <Button backgroundColor={color} color=\"white\" onClick={() => setQuotes([...quotes])}>Generate</Button>\n                    </Box>\n                </Box>\n            </Box>\n      </Box>\n    );\n}\n \nexport default QuoteGenerator;"]},"metadata":{},"sourceType":"module"}